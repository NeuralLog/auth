/auth/login:
  post:
    tags:
      - Auth
    summary: Login with email and password
    description: Authenticate a user with email and password
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: User email
              password:
                type: string
                format: password
                description: User password
            required:
              - email
              - password
    responses:
      '200':
        description: Successful login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      '401':
        description: Invalid credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message
                code:
                  type: string
                  description: Error code

/auth/logout:
  post:
    tags:
      - Auth
    summary: Logout
    description: Logout the current user
    security:
      - bearerAuth: []
    responses:
      '204':
        description: Successfully logged out
      '401':
        description: Unauthorized

/auth/validate-token:
  post:
    tags:
      - Auth
    summary: Validate token
    description: Validate an authentication token
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Token validation result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenValidationResult'
      '401':
        description: Invalid token

/auth/exchange-token:
  post:
    tags:
      - Auth
    summary: Exchange token for resource token
    description: Exchange an authentication token for a resource-specific token
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              resource:
                type: string
                description: Resource to access
              tenantId:
                type: string
                description: Tenant ID
            required:
              - resource
              - tenantId
    responses:
      '200':
        description: Token exchange result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenExchangeResult'
      '401':
        description: Unauthorized
      '403':
        description: Forbidden

/auth/verify-resource-token:
  post:
    tags:
      - Auth
    summary: Verify resource token
    description: Verify a resource-specific token
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
                description: Resource token
              resource:
                type: string
                description: Resource to access
            required:
              - token
              - resource
    responses:
      '200':
        description: Resource token verification result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceTokenVerificationResult'
      '401':
        description: Invalid token
